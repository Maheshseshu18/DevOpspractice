name: CI/CD Build and Push

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: myorg/myapp

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        if: exists('pom.xml')
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Node.js
        if: exists('package.json')
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Build
        run: |
          if [ -f pom.xml ]; then mvn -B -DskipTests clean package; fi
          if [ -f package.json ]; then npm ci && npm run build; fi
      - name: Build Docker image
        run: |
          SHORT_HASH=$(git rev-parse --short HEAD)
          STAMP=$(date +%Y%m%d_%H%M%S)
          TAG=${IMAGE_NAME}:${STAMP}-${SHORT_HASH}
          docker build -t $TAG .
          echo "Image: $TAG" > image_tag.txt
      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
      - name: Push image to registry
        run: |
          TAG=$(cat image_tag.txt)
          docker push $TAG
      - name: Deploy to Kubernetes (optional)
        if: ${{ secrets.KUBE_CONFIG != '' }}
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
      - name: Apply k8s deployment (if kubeconfig provided)
        if: ${{ secrets.KUBE_CONFIG != '' }}
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig
          kubectl set image deployment/myapp myapp=$(cat image_tag.txt)
